apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cp-web.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "cp-web.name" . }}
    app: {{ include "cp-web.name" . }}
    helm.sh/chart: {{ include "cp-web.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cp-web.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cp-web.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.hostaliases }}
      hostAliases:
      - ip: {{ .Values.hostaliases.ip | quote }}
        hostnames:
        - {{ .Values.hostaliases.hostname | quote }}
      - ip: {{ .Values.hostaliases.ip1 | quote }}
        hostnames:
        - {{ .Values.hostaliases.hostname2 | quote }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      initContainers:
      - image: bitnami/kubectl:latest
        name: secrets
        command: ['sh', '-c', 'VAR=""; for f in /kvmnt/*; do VAR="$VAR --from-literal=$(basename $f)=$(cat $f)"; done;  
        kubectl create secret generic app-secrets ${VAR} --dry-run -o yaml | kubectl apply -f - ;
        kubectl create secret generic cp-storage-secret --from-literal=azurestorageaccountname=$(cat /kvmnt1/cp-storage-name) --from-literal=azurestorageaccountkey=$(cat /kvmnt1/cp-storage-key) --dry-run -o yaml | kubectl apply -f - ']
        volumeMounts:
        - mountPath: /kvmnt
          name: flexvolcpweb
          readOnly: true
        - mountPath: /kvmnt1
          name: flexvolcpwebshare
          readOnly: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.commandOverride }}
          command: [ {{ .Values.commandOverride.command | quote }} ]
          {{ end }}
          volumeMounts:
          - name: configuration
            mountPath: /opt/jboss/wildfly/standalone/configuration
          - name: jks
            mountPath: /etc/pki/java
          - name: sdrs-cache
            mountPath: /opt/jboss/wildfly/standalone/sdrs_cache
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: jmx1
              containerPort: 9990
              protocol: TCP
            - name: jmx2
              containerPort: 9993
              protocol: TCP
        {{- if eq .Values.livenessProbe.enabled true }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        {{ end }}
        {{- if eq .Values.readinessProbe.enabled true }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: APACHEDSPW_UIM
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: apachedspw-uim
            - name: WF10_POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: wf10-postgres-user
            - name: WF10_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: wf10-postgres-password
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
      volumes:
        - name: configuration
          azureFile:
            secretName: cp-storage-secret
            shareName: wf1-configuration/configuration
            readOnly: false
        - name: sdrs-cache
          azureFile:
            secretName: cp-storage-secret
            shareName: sdrs-cache
            readOnly: false
        - name: jks
          azureFile:
            secretName: cp-storage-secret
            shareName: wf1-configuration/jks
            readOnly: false
        - name: flexvolcpweb
          flexVolume:
            driver: "azure/kv"
            secretRef:
              name: kvcreds
            options:
              usepodidentity: "false"
              keyvaultname: "cp-vault-stg"
              keyvaultobjectnames: "apachedspw-uim;wf10-postgres-user;wf10-postgres-password"
              keyvaultobjecttypes: secret;secret;secret
              resourcegroup: "crime-portal-stg-rg"
              subscriptionid: "74dacd4f-a248-45bb-a2f0-af700dc4cf68"
              tenantid: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
        - name: flexvolcpwebshare
          flexVolume:
            driver: "azure/kv"
            secretRef:
              name: kvcreds
            options:
              usepodidentity: "false"
              keyvaultname: "cp-vault-stg"
              keyvaultobjectnames: "cp-storage-key;cp-storage-name"
              keyvaultobjecttypes: secret;secret
              resourcegroup: "crime-portal-stg-rg"
              subscriptionid: "74dacd4f-a248-45bb-a2f0-af700dc4cf68"
              tenantid: "531ff96d-0ae9-462a-8d2d-bec7c0b42082"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
