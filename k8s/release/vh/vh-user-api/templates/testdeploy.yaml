---
# Source: vh-user-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vh-user-api
  labels:
    app.kubernetes.io/name: vh-user-api
    app: vh-user-api
    helm.sh/chart: vh-user-api-0.0.1
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: vh-user-api
---
# Source: vh-user-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vh-user-api
  labels:
    app.kubernetes.io/name: vh-user-api
    app: vh-user-api
    helm.sh/chart: vh-user-api-0.0.1
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 
  selector:
    matchLabels:
      app.kubernetes.io/name: vh-user-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vh-user-api
    spec:
      containers:
      - name: vh-user-api
        image: "sdshmctspublic.azurecr.io/vh/vh-user-api:v0.1"
        imagePullPolicy: Always
        volumeMounts:
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        resources:
            {}
        env:
---
# Source: vh-user-api/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: vh-user-api
  labels:
    app.kubernetes.io/name: vh-user-api
    app: vh-user-api
    helm.sh/chart: vh-user-api-0.0.1
  annotations:
    kubernetes.io/ingress.class: traefik-dev
spec:
  rules:
---
# Source: vh-user-api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "RELEASE-NAME-vh-user-api-test-connection"
  labels:
    app.kubernetes.io/name: vh-user-api
    helm.sh/chart: vh-user-api-0.0.1
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['vh-user-api:80']
  restartPolicy: Never